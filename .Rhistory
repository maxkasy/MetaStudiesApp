ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
geom_histogram(binwidth = 2, fill = "steelblue") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(binwidth = 2, fill = "steelblue") +
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
gplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(binwidth = 2, fill = "steelblue")
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(binwidth = 2, fill = "steelblue")
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(aes(x=z), fill = "steelblue") +
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(aes(x=z), fill = "steelblue")
ggplot(dens, aes(x=z)) +
xlab("Z")+
geom_histogram(fill = "steelblue") +
geom_line(aes(y=variable), size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
xlab("Z")+
geom_histogram(binwidth=.2fill = "steelblue") +
geom_line(aes(y=variable), size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
xlab("Z")+
geom_histogram(binwidth=.2,fill = "steelblue") +
geom_line(aes(y=variable), size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
xlab("Z")+
geom_line(aes(y=variable), size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
xlab("Z")+
geom_line(aes(y=variable), size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=variable)) +
xlab("Z")+
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=variable)) +
xlab("Z")+
geom_line(size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
#geom_histogram(, fill = "steelblue") +
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(, fill = "steelblue") +
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_histogram(fill = "steelblue") +
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z))
ggplot(dens, aes(x=z)) +
geom_histogram()
ggplot(dens, aes(X)) +
geom_histogram()  +
scale_x_continuous(expand = c(0,0),limits = c(-rangeZ,rangeZ))+
dens=melt(dens, id="z")
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
runApp()
runApp()
ggplot(dens, aes(x=z)) +
facet_grid(variable ~ .,  scales = "free_y") +
xlab("Z")+
geom_line(aes(y=f), size=2) +
geom_line(aes(y=p) size=2) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
facet_grid(variable ~ .,  scales = "free_y") +
xlab("Z")+
geom_line(aes(y=f), size=2) +
geom_line(aes(y=p) size=2) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z)) +
facet_grid(variable ~ .,  scales = "free_y") +
xlab("Z")+
geom_line(aes(y=f), size=2) +
geom_line(aes(y=p), size=2) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
n=500
rangeZ=3 #1.1*max(abs(X/sigma))
dens=data.frame(z=seq(-rangeZ,rangeZ,length.out =n))
dens$f=dnorm(dens$z, mean=Psihat[1], sd=Psihat[2])
Tpowers=Tpowers_fun(dens$z,n,cutoffs,symmetric)
betap=as.vector(c(Psihat[-c(1,2)],  1))
dens$p=Tpowers%*%betap
dens=melt(dens, id="z")
n=500
rangeZ=3 #1.1*max(abs(X/sigma))
dens=data.frame(z=seq(-rangeZ,rangeZ,length.out =n))
dens$f=dnorm(dens$z, mean=Psihat[1], sd=Psihat[2])
Tpowers=Tpowers_fun(dens$z,n,cutoffs,symmetric)
betap=as.vector(c(Psihat[-c(1,2)],  1))
dens$p=Tpowers%*%betap
ggplot(dens, aes(x=z)) +
facet_grid(variable ~ .,  scales = "free_y") +
xlab("Z")+
geom_line(aes(y=f), size=2) +
geom_line(aes(y=p), size=2) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
dens=melt(dens, id="z")
ggplot(dens, aes(x=z, y=value)) +
xlab("Z")+
geom_line( size=2) +
facet_grid(variable ~ .,  scales = "free_y") +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
qplot(X/sigma)
qplot(X/sigma, geom=hist)
qplot(X/sigma, geom="hist")
qplot(X/sigma, geom="histogram")
qplot(X/sigma, geom="histogram")+
scale_x_continuous(expand = c(0,0),limits = c(-rangeZ,rangeZ))
qplot(Z, geom="histogram", binwidth=.2)+
scale_x_continuous(expand = c(0,0),limits = c(-rangeZ,rangeZ))
Z=X/sigma
qplot(Z, geom="histogram", binwidth=.2)+
scale_x_continuous(expand = c(0,0),limits = c(-rangeZ,rangeZ))
qplot(Z, geom="histogram", binwidth=.2, xlim=c(-3,3))
runApp()
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset = .(variable == "f"), size=2) +
geom_line(subset = .(variable == "p"), size=2) +
geom_histogram(subset = .(variable == "f"), aes(x=z)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
library(reshape)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset = (dens, variable == "f"), size=2) +
geom_line(subset = (dens, variable == "p"), size=2) +
geom_histogram(subset = (dens, variable == "f"), aes(x=z)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), size=2) +
geom_line(subset(dens, variable == "p"), size=2) +
geom_histogram(subset(dens, variable == "f"), aes(x=z)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), size=2) +
geom_line(subset(dens, variable == "p"), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), size=2)
subset(dens, variable == "f")
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset(dens, variable == "f"), aes(y=value), size=2) +
geom_line(subset(dens, variable == "p"), aes(y=value), size=2)
subset(dens, variable == "f")
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset = .(variable == "f"), aes(y=value), size=2) +
geom_line(subset = .(variable == "p"), aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset = (variable == "f"), aes(y=value), size=2) +
geom_line(subset = (variable == "p"), aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(subset = (variable == "f"), aes(y=value), size=2) +
geom_line(subset = (variable == "p"), aes(y=value), size=2)
dens[dens$variable=="f"]
dens[[dens$variable=="f"]]
dens[dens$variable=="f",]
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(dens[dens$variable=="f",], aes(y=value), size=2) +
geom_line(dens[dens$variable=="p",], aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(dens[dens$variable=="f",], aes(y=value), size=2) +
geom_line(dens[dens$variable=="p",], aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_grid(variable ~ .,  scales = "free_y") +
xlab("Z")+
geom_line(dens[dens$variable=="f",], aes(y=value), size=2) +
geom_line(dens[dens$variable=="p",], aes(y=value), size=2)
ggplot(dens, aes(x=z, y=value)) +
facet_wrap(~ variable,
nrow = 3,
scales = "free_y")+
xlab("Z")+
geom_line(dens[dens$variable=="f",], size=2) +
geom_line(dens[dens$variable=="p",], size=2)
runApp()
library(ggplot2)
library(reshape)
# Load data
BLOGVIEWS = read.table("blogviews.txt",
header = T,
sep = "\t")
# We have times series data, with one observation per month
# Convert into Date class, specifying "1" as the day of the month
BLOGVIEWS$DATE = as.Date(paste("1", BLOGVIEWS$MON, BLOGVIEWS$YEAR),
format = "%d %b %Y")
# Check that our data look as we expect
str(BLOGVIEWS)
# We want to replace NAs (representing zero views) with 0
BLOGVIEWS$VIEWS[is.na(BLOGVIEWS$VIEWS)] = 0
# Next we calculate cumulative site views by month
BLOGVIEWS$CVIEWS = cumsum(BLOGVIEWS$VIEWS)
# Check the results
BLOGVIEWS
# To plot the data using facets, we need to reshape the
# data into 'long' format using melt
(BVIEWS.MELT = melt(BLOGVIEWS, id.vars = c("DATE", "MON", "YEAR")))
# Change the levels of the 'variable' factor so that our
# facets have sensible names
levels(BVIEWS.MELT$variable) = c("Monthly views", "Cumulative views")
# The first plot sets up the axes and facets, but we
# use geom_blank to draw a blank plot, which we'll add
# geoms to next
g1 = ggplot(BVIEWS.MELT, aes(DATE, value)) +
facet_wrap(~ variable,
nrow = 2,
scales = "free_y") +
labs(x = "Year", y = "Number of views")
# Update the first plot, adding bars to display monthly counts
# The subset operation ensures that we only add to the facet
# corresponding to 'Monthly views'
g2 = g1 + geom_bar(subset = .(variable == "Monthly views"),
stat = "identity")
# Do the same for the 'Cumulative views' facet. It makes
# more sense to display these data using geom_line
g3 = g2 + geom_line(subset = .(variable == "Cumulative views"),
colour = "blue",
size = 1)
library(ggplot2)
library(reshape2)
# Load data
BLOGVIEWS = read.table("blogviews.txt",
header = T,
sep = "\t")
# We have times series data, with one observation per month
# Convert into Date class, specifying "1" as the day of the month
BLOGVIEWS$DATE = as.Date(paste("1", BLOGVIEWS$MON, BLOGVIEWS$YEAR),
format = "%d %b %Y")
# Check that our data look as we expect
str(BLOGVIEWS)
# We want to replace NAs (representing zero views) with 0
BLOGVIEWS$VIEWS[is.na(BLOGVIEWS$VIEWS)] = 0
# Next we calculate cumulative site views by month
BLOGVIEWS$CVIEWS = cumsum(BLOGVIEWS$VIEWS)
# Check the results
BLOGVIEWS
# To plot the data using facets, we need to reshape the
# data into 'long' format using melt
(BVIEWS.MELT = melt(BLOGVIEWS, id.vars = c("DATE", "MON", "YEAR")))
# Change the levels of the 'variable' factor so that our
# facets have sensible names
levels(BVIEWS.MELT$variable) = c("Monthly views", "Cumulative views")
# The first plot sets up the axes and facets, but we
# use geom_blank to draw a blank plot, which we'll add
# geoms to next
g1 = ggplot(BVIEWS.MELT, aes(DATE, value)) +
facet_wrap(~ variable,
nrow = 2,
scales = "free_y") +
labs(x = "Year", y = "Number of views")
# Update the first plot, adding bars to display monthly counts
# The subset operation ensures that we only add to the facet
# corresponding to 'Monthly views'
g2 = g1 + geom_bar(subset = .(variable == "Monthly views"),
stat = "identity")
# Do the same for the 'Cumulative views' facet. It makes
# more sense to display these data using geom_line
g3 = g2 + geom_line(subset = .(variable == "Cumulative views"),
colour = "blue",
size = 1)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bla=c(1,2)
blabla=c(3,3)
test=list(bla, blabla)
test
test$bla
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
read.table("cleaned_minwage_data.csv",
sep=",")
pwd()
ls()
read.table("cleaned_minwage_data.csv",
sep=",")
getwd()
read.table("../Applications/MinimumWagev2/cleaned_minwage_data.csv",
sep=",")
metadata=read.table("../Applications/MinimumWagev2/cleaned_minwage_data.csv",
sep=",")
X=metadata[,1]
sigma=metadata[,2]
metastudies_plot(X,sigma)
cutoffs=1.96
estimates=metastudies_estimation(X,sigma,cutoffs, FALSE)
symmetric=FALSE
#starting values based on whether p is symmetric or not
if (symmetric) {
Psihat0 = c(0,1, rep(1,length(cutoffs)))
} else {
Psihat0 = c(0,1, 2*rep(1,length(cutoffs) + 1))
}
#starting values based on whether p is symmetric or not
if (symmetric) {
Psihat0 = c(0,1, rep(1,length(cutoffs)))
} else {
Psihat0 = c(0,1, rep(1,2*length(cutoffs) + 1))
}
lower.b = c(-Inf,rep(0,length(Psihat0)-1))
upper.b=rep(Inf,length(Psihat0))
findmin<-nlminb(objective=LLH_only, start=Psihat0,lower=lower.b,upper=upper.b,control = list(eval.max = MaxEval, iter.max = MaxIter, abs.tol = Tol));
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma,0)
LLH_only<-function (Psi){
A<-LLH(Psi);
return(A$LLH)
}
#starting values based on whether p is symmetric or not
if (symmetric) {
Psihat0 = c(0,1, rep(1,length(cutoffs)))
} else {
Psihat0 = c(0,1, rep(1,2*length(cutoffs) + 1))
}
lower.b = c(-Inf,rep(0,length(Psihat0)-1))
upper.b=rep(Inf,length(Psihat0))
findmin<-nlminb(objective=LLH_only, start=Psihat0,lower=lower.b,upper=upper.b,control = list(eval.max = MaxEval, iter.max = MaxIter, abs.tol = Tol));
LLH(Psihat0)
LLH(Psihat0)
View(Tpowers)
co=c(1,2)
c(0,co)
rev(co)
cutoffs= c(-rev(cutoffs), 0 ,cutoffs)
cutoffs=1.96
LLH(Psihat0)
View(Tpowers)
LLH(Psihat0)
source("VariationVarianceLogLikelihood.R")
debugSource('~/Dropbox/research/WorkInProgress/PublicationBias/MetaStudiesApp/VariationVarianceLogLikelihood.R')
LLH(Psihat0)
View(Tpowers)
TT[1:10]
View(Tpowers)
LLH(Psihat0)
phat=Tpowers%*%betap;
#@  %vector of un-truncated likelihoods
if (normalizedsign==1) {
fX=0.5*dnorm(X,lambdabar, sqrt(sigma^2 + tauhat^2))+0.5*dnorm(-X,lambdabar, sqrt(sigma^2 + tauhat^2));
} else {
fX=dnorm(X,lambdabar, sqrt(sigma^2 + tauhat^2));
}
debugSource('~/Dropbox/research/WorkInProgress/PublicationBias/MetaStudiesApp/VariationVarianceLogLikelihood.R')
LLH(Psihat0)
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma)
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma)
LLH(Psihat0)
LLH(Psihat0)
debugSource('~/Dropbox/research/WorkInProgress/PublicationBias/MetaStudiesApp/VariationVarianceLogLikelihood.R')
LLH(Psihat0)
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma)
LLH(Psihat0)
LLH(Psihat0)
debugSource('~/Dropbox/research/WorkInProgress/PublicationBias/MetaStudiesApp/VariationVarianceLogLikelihood.R')
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma)
LLH(Psihat0)
~TRUE
!TRUE
debugSource('~/Dropbox/research/WorkInProgress/PublicationBias/MetaStudiesApp/VariationVarianceLogLikelihood.R')
LLH <- function (Psi) VariationVarianceLogLikelihood(Psi[1], Psi[2], c(Psi[-c(1,2)],  1),cutoffs,symmetric, X, sigma)
LLH(Psihat0)
LLH(Psihat0)
LLH(Psihat0)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
