runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
metadata=read.table(/Users/max/Dropbox/research/WorkInProgress/PublicationBias/Applications/deworming/cleaned_deworming_data.csv,
sep=",")
metadata=read.table("/Users/max/Dropbox/research/WorkInProgress/PublicationBias/Applications/deworming/cleaned_deworming_data.csv")
View(metastudies_plot)
View(metastudies_plot)
View(metadata)
View(metadata)
metadata=read.table("/Users/max/Dropbox/research/WorkInProgress/PublicationBias/Applications/deworming/cleaned_deworming_data.csv",sep=",")
View(metadata)
View(metadata)
X=metadata[1]
sigma=metadata[2]
metastudies_plot(X,sigma)
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(xvar=X,
yvar=sigma,
significant = as.factor(significant&nooutlier))
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
View(dat)
View(dat)
data.frame(xvar=X,
yvar=sigma)
data.frame(xx=X, yy=sigma)
X
c(X)
dat<-data.frame(xvar=c(X),
yvar=c(sigma),
significant = as.factor(significant&nooutlier))
dat
data.frame(xvar=c(X),
yvar=c(sigma))
dat<-data.frame(X,
sigma,
as.factor(significant&nooutlier))
data
View(dat)
View(dat)
names(dat)=c("xvar", "yvar","significant")
View(dat)
View(dat)
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(X, sigma, as.factor(significant&nooutlier))
names(dat)=c("xvar", "yvar","significant")
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
ggplot(dat, aes(x=xvar,y=yvar)) +
xlim(c(-rangeX,rangeX))+
ylim(c(0,rangeX/critval))+
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 2,aes(colour = significant,
fill = significant))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue"))+
scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval))
ggplot(dat, aes(x=xvar,y=yvar)) +
xlim(c(-rangeX,rangeX))+
ylim(c(0,rangeX/critval))+
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 2,aes(colour = significant,
fill = significant))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue"))+
#  scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval))
# scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval),
#                        breaks = round(seq(min(dat$yvar), max(dat$yvar), by = 0.5),1))+
#      scale_x_continuous(breaks = round(seq(min(dat$xvar), max(dat$xvar), by = 0.5),1))
}
ggplot(dat, aes(x=xvar,y=yvar)) +
xlim(c(-rangeX,rangeX))+
ylim(c(0,rangeX/critval))+
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 2,aes(colour = significant,
fill = significant))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue"))+
#  scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval))
# scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval),
#                        breaks = round(seq(min(dat$yvar), max(dat$yvar), by = 0.5),1))+
#      scale_x_continuous(breaks = round(seq(min(dat$xvar), max(dat$xvar), by = 0.5),1))
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 2,aes(colour = significant,
fill = significant))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(limits = c(-rangeX,rangeX))+
#ylim(c(0,rangeX/critval))
scale_y_continuous( expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1)
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 2,aes(colour = significant,
fill = significant))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
#ylim(c(0,rangeX/critval))
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1)
runApp()
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.5)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
#ylim(c(0,rangeX/critval))
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1)
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.5)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
#ylim(c(0,rangeX/critval))
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1, panel.background = element_rect(fill = "azure2", colour = NA))
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.5)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "azure2", colour = NA))
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.5)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey95", colour = NA))
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.8)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey97", colour = NA))
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 3,aes(colour = significant,
fill = significant), alpha=.7)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey97", colour = NA))
runApp()
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 5,aes(colour = significant,
fill = significant), alpha=.7)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey97", colour = NA))
runApp()
runApp()
runApp()
View(metadata)
View(metadata)
metadata[1]
metadata[2]
metastudies_plot(X,sigma)
runApp()
sigma=metadata[2]
metastudies_plot(X,sigma)
metastudies_plot(X,sigma)
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(X, sigma, as.factor(significant&nooutlier))
names(dat)=c("xvar", "yvar","significant")
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 5,aes(colour = significant,
fill = significant), alpha=.7)+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
median(sigma)
sigma
med(sigma)
help median()
help(median)
X
median(X)
median(as.vector(X))
as.vector(X)
median(1:15)
C(X)
c(X)
median(c(X))
View(X)
View(X)
metadata[1]
metadata[[1]
]
metadata[,1]
runApp()
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 5,aes(colour = significant,
fill = significant), alpha=min(.7,max(20/n,.1))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
}
n=length(X)
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(X, sigma, as.factor(significant&nooutlier))
names(dat)=c("xvar", "yvar","significant")
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 5,aes(colour = significant,
fill = significant), alpha=min(.7,max(20/n,.1))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
}
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression("sigma" ))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 5,aes(colour = significant,
fill = significant), alpha=min(.7,max(20/n,.1)))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
runApp()
sqrt(20)
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression(sigma))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 4,aes(colour = significant,
fill = significant), alpha=min(.8,max(40/n,.3)))+
scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list = ls())
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
metastudies_plot<-function(X,sigma,critval=1.96){
n=length(X)
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(X, sigma, as.factor(significant&nooutlier))
names(dat)=c("xvar", "yvar","significant")
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
p=ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression(sigma))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 4,aes(colour = significant,
fill = significant), alpha=min(.8,max(40/n,.3)))+
#scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey50", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
}
library(shiny)
ui <- fluidPage(
#  titlePanel(h1("Optimal treatment assignment given covariates", align = "center")),
sidebarLayout(
sidebarPanel(
width=5,
fileInput("file1", "Choose CSV File of estimates and standard errors",
multiple = FALSE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")),
hr(),
h3("Model parameters"),
fluidRow(
column(6, checkboxInput("symmetric", "Symmetric p(.)", value = TRUE),
checkboxGroupInput("cutoffs", "Cutoffs for p(.)",
choices=c("1.65" = 1.645,
"1.96" = 1.960,
"2.33" = 2.326),
selected = 1.960)),
column(6, radioButtons("modelmu", "Model for the distribution of effects",
choices = c("Normal" = 1,
"Student-t" = 2,
"nonparametric" = 3),selected = 1))
),
hr(),
actionButton(inputId = "estimatebutton", label = "Estimate model")
),
mainPanel(
width=7,
# tableOutput("estimatestable"),
hr(),
plotOutput("funnel", width = "100%")
)
)
)
server <- function(input, output, session) {
#object to store estimation results
v = reactiveValues()
observeEvent(input$estimatebutton,{
req(input$file1)
#loading covariate file
metadata=read.table(input$file1$datapath,
sep=",")
X=metadata[,1]
sigma=metadata[,2]
# generate funnel plot
output$funnel=renderPlot({
metastudies_plot(X,sigma)
})
#invoke estimation commands here
#v$estimates=metastudies_estimation(X,sigma, input$cutoffs,input$symmetric)
})
# render estimates to table
# output$estimatestable =  renderTable({
#   v$estimates
#  })
}
# Run the app ----
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
X=metadata[,1]
sigma=metadata[,2]
metastudies_plot(X,sigma)
n=length(X)
significant<-(abs(X/sigma)>critval);
critval=1.96
significant<-(abs(X/sigma)>critval);
nooutlier<-sigma<50;
dat<-data.frame(X, sigma, as.factor(significant&nooutlier))
names(dat)=c("xvar", "yvar","significant")
rangeX=1.1*max(max(abs(X)), max(abs(sigma[nooutlier]))*critval);
dat<-dat[order(dat$significant),]
p=ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression(sigma))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 4,aes(colour = significant,
fill = significant), alpha=min(.8,max(40/n,.3)))+
#scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey50", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
runApp()
p=ggplot(dat, aes(x=xvar,y=yvar)) +
xlab("X")+
ylab(expression(sigma))+
geom_abline(intercept = 0,slope=1/critval,color="grey")+
geom_abline(intercept = 0,slope=-1/critval,color="grey")+
geom_point(size = 4,aes(colour = significant,
fill = significant), alpha=min(.8,max(40/n,.3)))+
#scale_fill_manual(values=c("grey", "blue")) +
scale_colour_manual(values=c("grey50", "blue")) +
scale_x_continuous(expand = c(0,0),limits = c(-rangeX,rangeX))+
scale_y_continuous(expand = c(0,0), limits = c(0,rangeX/critval))+
theme(aspect.ratio=1,
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "grey98", colour = NA))
#metastudies_plot(X,sigma)
qplot(X,sigma)
runApp()
runApp()
